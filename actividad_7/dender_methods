from dataclasses import dataclass
@dataclass
class Elemento:
    nombre : str
    
    def __eq__(self, otro_nombre:Elemento) -> bool:
        return self.nombre == otro_nombre
class Conjunto:
    contador=0
    def __init__(self,nombre:str):
        self.__id=Conjunto.contador
        Conjunto.contador += 1
        self.lista_elementos:list = []
        self.nombre:str= nombre
        @property
        def id (self):
            return self.__id
    def contiene(self,elemento:Elemento):
        for e in self.lista_elementos:
            if e == elemento:
                return True
            else:
                return False
    def agregar_elemento(self,elemento:Elemento):
        if Conjunto.contiene(elemento) == True:
            self.lista_elementos.append(elemento)
    def unir(self,otro_conjuto:"conjunto"):
        for elemento in otro_conjuto.lista_elementos:
            self.agregar_elemento(elemento)


    def __add__(self,otro_conjunto:"otro_conjunto"):
        nuevo_conjunto=Conjunto(f"{self.nombre}UNION {otro_conjunto.nombre}")
        nuevo_conjunto.lista_elementos= self.lista_elementos.copy()
        nuevo_conjunto.unir(otro_conjuto)
        return nuevo_conjunto
       
       
    @classmethod
    def intersertar(cls, conjunto1:"conjunto", conjunto2:"conjunto"):
        interseccion=Conjunto(f"{conjunto1.nombre}INTERSECCION {conjunto2.nombre}")
        for elemento in conjunto1.lista_elementos:
            if conjunto2.contiene(elemento): 
                interseccion.agregar_elemento(elemento)
        return interseccion
    
    def __str__(self):
        elementos=",".join(elemento.nombre for elemento in self.lista_elementos)
        return f"conjunto {self.nombre}:{elementos}"